// massiv.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

int main()
{
	int numbers[5];
	numbers[0] = 1;
	numbers[3] = 7;
	std::cout << numbers[0] << "\n";
	std::cout << numbers[1] << "\n";
	std::cout << numbers[2] << "\n";
	std::cout << numbers[3] << "\n";
	std::cout << numbers[4] << "\n";

	std::cout << "-----------------------\n";
	for (int i = 0; i < 5; i++) { std::cout << numbers[i] << "\n"; }
	
	std::cout << "-----------------------\n";
	std::cout << sizeof(numbers) << "\n";//сколько байт занимает массив с данными
	std::cout << sizeof(numbers[0]) << "\n";//сколько байт занимает ячейка массива

	int lenght = sizeof(numbers) / sizeof(numbers[0]); //нахождение длинны массива
	std::cout << "lenght = " << lenght << "\n";

	std::cout << "-----------------------\n";
	for (int i = 0; i < lenght; i++) { std::cout << numbers[i] << "\n"; } //позволяет выводить массивы любой длины

	std::cout << "-----------------------\n";
	int array[] = { 1, 3, 34, 6, 2, 9, 0 };//альтернативный вариант объявления массива
	int l = sizeof(array) / sizeof(array[0]); //нахождение длинны массива
	for (int i = 0; i < l; i++) { std::cout << array[i] << "\n"; } //позволяет выводить массивы любой длины
	
	std::cout << "-----------------------\n";
	for (int a : array) {
		std::cout << a << " " << "\n";
	}
	std::cout << "-----------------------\n";
	float a[] = { 1, 4, 5, 6, 7, 43, 65.34, 23.4, 6.5, 2.23, 22, 11 }; //по-хорошему числа прописывать в виде 1.2f, но они и так без проблем преобразуются из double в float
	float sum = 0;
	for (float t : a) sum += t;
	std::cout << "sum of a[]: " << sum << "\n";

	sum = 0;
	for (auto t : a) sum += t; //автоматически выставляет тип данных, в случае если он нам не известен
	std::cout << sum << "\n";
}



// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
